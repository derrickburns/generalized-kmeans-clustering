name: CI

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        java-version: [11, 17]
        scala-version: ['2.12.18', '2.13.13']   # <-- pin exact versions
        spark-version: ['3.4.0', '3.5.1']
        exclude:
          - scala-version: '2.13.13'
            spark-version: '3.4.0'  # keep your exclusion logic

    name: Test (Java ${{ matrix.java-version }}, Scala ${{ matrix.scala-version }}, Spark ${{ matrix.spark-version }})

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java-version }}
          distribution: temurin

      - name: Set up sbt
        uses: sbt/setup-sbt@v1

      # ðŸ”§ Remove IDE artifacts that pull semanticdb (breaks on 2.13.14)
      - name: Clean editor files
        run: |
          rm -f project/metals.sbt
          rm -rf .metals .bloop

      - name: Cache SBT/Coursier/Ivy
        uses: actions/cache@v4
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
            ~/.cache/coursier
            ~/.coursier/cache
          key: ${{ runner.os }}-sbt-${{ matrix.scala-version }}-${{ matrix.spark-version }}-${{ hashFiles('**/build.sbt', '**/project/build.properties', '**/project/plugins.sbt') }}
          restore-keys: |
            ${{ runner.os }}-sbt-${{ matrix.scala-version }}-${{ matrix.spark-version }}-
            ${{ runner.os }}-sbt-

      - name: Compile
        run: sbt ++${{ matrix.scala-version }} clean compile
        env:
          SPARK_VERSION: ${{ matrix.spark-version }}

      - name: Run tests
        run: sbt ++${{ matrix.scala-version }} test
        env:
          SPARK_VERSION: ${{ matrix.spark-version }}

      - name: Check code style
        if: matrix.scala-version == '2.12.18' && matrix.java-version == 17
        run: sbt ++${{ matrix.scala-version }} scalastyle

      - name: Generate test coverage report
        if: matrix.scala-version == '2.12.18' && matrix.java-version == 17 && matrix.spark-version == '3.5.1'
        run: sbt ++${{ matrix.scala-version }} coverage test coverageReport
        env:
          SPARK_VERSION: ${{ matrix.spark-version }}

      - name: Upload coverage reports to Codecov
        if: matrix.scala-version == '2.12.18' && matrix.java-version == 17 && matrix.spark-version == '3.5.1'
        uses: codecov/codecov-action@v4
        with:
          file: ./target/scala-2.12/scoverage-report/scoverage.xml
          fail_ci_if_error: false
